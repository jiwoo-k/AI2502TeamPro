<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.TagRepository">
    <insert id="addTag" flushCache="true" parameterType="com.lec.spring.domain.Tag"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO tag(category_id, name)
        VALUES (#{category_id}, #{name});
    </insert>

    <select id="searchTag" parameterType="com.lec.spring.domain.Tag" resultType="com.lec.spring.domain.Tag">
        SELECT id, name, category_id
        FROM tag
        WHERE name = #{name} AND category_id = #{category_id}
    </select>

    <select id="findPostsByTags" parameterType="arrayList" resultMap="mapPost">
        select p.id "p_id",
               p.user_id "p_user_id",
               p.type "p_type",
               p.title "p_title",
               p.content "p_content",
               p.createdat "p_createdat",
               p.isdeleted "p_isdeleted",
               p.deletedat "p_deletedat"
        from post p, post_tag pt
        where p.id=pt.post_id
          and pt.tag_id in (<foreach collection="array" item="e" separator=",">#{e.id}</foreach>)
        and p.type = #{param2};
    </select>

    <resultMap id="mapPost" type="com.lec.spring.domain.Post">
        <result column="p_id" property="id"/>
        <result column="p_user_id" property="user_id"/>
        <result column="p_type" property="type"/>
        <result column="p_title" property="title"/>
        <result column="p_content" property="content"/>
        <result column="p_createdat" property="createdat"/>
        <result column="p_isdeleted" property="isdeleted"/>
        <result column="p_deletedat" property="deletedat"/>
        <collection property="post_tag" ofType="com.lec.spring.domain.Tag"
                    column="p_id" select="com.lec.spring.repository.TagRepository.LoadPostTags"/>

    </resultMap>

    <insert id="savePostTag" parameterType="map">
        INSERT INTO post_tag (post_id, tag_id)
        VALUES
        <foreach collection="tags" item="tag" separator=",">
            (#{postId}, #{tag.id})
        </foreach>
    </insert>


    <insert id="saveUserTag" flushCache="true" parameterType="arrayList">
        INSERT INTO user_tag(user_id, tag_id)
        VALUES
        <foreach collection="list" item="e" separator=",">
            (#{param2}, #{e.id})
        </foreach>
    </insert>

    <delete id="deleteUserTag" flushCache="true" parameterType="com.lec.spring.domain.User">
        delete from user_tag where id = #{id}
    </delete>

    <delete id="deletePostTag" flushCache="true" parameterType="com.lec.spring.domain.Post">
        delete from post_tag where post_id = #{id}
    </delete>

    <select id="loadPostTags" resultMap="mapTag">
        SELECT
            t.id AS t_id,
            t.category_id AS t_category_id,
            t.name AS t_name,
            c.color as c_color
        FROM tag t join category c on c.id = t.category_id
                   JOIN post_tag pt ON t.id = pt.tag_id
        WHERE pt.post_id = #{post_id}
    </select>

    <select id="loadUserTags" resultMap="mapTag">
        select t.id "t_id",
               t.category_id "t_category_id",
               t.name "t_name"
        from user_tag ut, tag t
        where ut.user_id = #{userId} and ut.tag_id = t.id;
    </select>

    <select id="findById" resultType="com.lec.spring.domain.Tag">
        SELECT * FROM tag WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultType="com.lec.spring.domain.Tag">
        SELECT *
        FROM tag
        WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <select id="findByName" resultType="com.lec.spring.domain.Tag">
        SELECT * FROM tag WHERE name = #{name}
    </select>


    <resultMap id="mapTag" type="com.lec.spring.domain.Tag">
        <result column="t_id" property="id"/>
        <result column="t_category_id" property="category_id"/>
        <result column="t_name" property="name"/>
        <result column="c_color" property="color"/>
    </resultMap>

</mapper>