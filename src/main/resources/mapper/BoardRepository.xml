<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.PostRepository">

    <resultMap id="postMap" type="com.lec.spring.domain.Post">
        <result column="p_id" property="id"/>
        <result column="p_title" property="title"/>
        <result column="p_content" property="content"/>
        <result column="p_createdat" property="createdat"/>
        <result column="p_type" property="type"/>
        <result column="u_name" property="name"/>
    </resultMap>

    <resultMap id="userMap" type="com.lec.spring.domain.User">
        <result column="u_id" property="id"/>
        <result column="u_name" property="name"/>
    </resultMap>

    <insert id="save" flushCache="true" keyProperty="id" parameterType="com.lec.spring.domain.Post" useGeneratedKeys="true">
        insert into post
            (user_id, title, content, type)
        values
            (#{user_id},#{title},#{content},#{type})
    </insert>

    <sql id="select_base">
        SELECT
            post.id AS p_id,
            post.title AS p_title,
            post.content AS p_content,
            post.createdat AS p_createdat,
            post.type AS p_type,
            user.id AS u_id,
            user.name AS u_name
        FROM post
                 JOIN user ON post.user_id = user.id
    </sql>

    <select id="findAll" resultMap="postMap">
        <include refid="select_base"/>
        ORDER BY post.id DESC
    </select>

    <select id="findByType" resultMap="postMap">
        <include refid="select_base"/>
        WHERE post.type = #{type}
    </select>

    <select id="findById" parameterType="long" resultMap="postMap">
        <include refid="select_base"/>
        WHERE post.id = #{id}
    </select>

    <update id="update" parameterType="com.lec.spring.domain.Post" flushCache="true">
        update post
        set
            title   = #{title},
            content = #{content}
        where id = #{id}
    </update>

    <delete id="deleteById" flushCache="true" parameterType="com.lec.spring.domain.Post">
        delete from post where id = #{id}
    </delete>

</mapper>
