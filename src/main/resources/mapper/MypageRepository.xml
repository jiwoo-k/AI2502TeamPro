<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.spring.repository.MypageRepository">

    <!-- ▶ Post 도메인 컬럼–필드 매핑을 위한 resultMap -->
    <resultMap id="PostResultMap" type="com.lec.spring.domain.Post">
        <id     property="id"        column="id"/>
        <result property="userId"    column="user_id"/>
        <result property="type"      column="type"/>
        <result property="title"     column="title"/>
        <result property="content"   column="content"/>
        <result property="createdAt" column="createdat"/>
        <result property="isDeleted" column="isdeleted"/>
        <result property="deletedAt" column="deletedat"/>
    </resultMap>

    <!-- 1) 회원 정보 조회 -->
    <select id="selectUserById"
            parameterType="long"
            resultType="com.lec.spring.domain.User">
        SELECT u.id,
               u.username,
               u.name,
               u.password,
               u.juminNo,
               u.createdAt                       AS createdAt,
               u.latitude,
               u.longitude,
               u.status
        FROM user u
        WHERE u.id = #{userId}
    </select>

    <!-- 2) 내가 쓴 게시글 목록 -->
    <select id="selectMyPosts"
            parameterType="long"
            resultMap="PostResultMap">
        SELECT
            id,
            user_id       AS userId,
            type,
            title,
            content,
            createdat     AS createdAt,
            isdeleted     AS isDeleted,
            deletedat     AS deletedAt
        FROM post
        WHERE user_id = #{userId}
        ORDER BY createdat DESC
    </select>

    <!-- 2-2) 내가 쓴 게시글 페이징 -->
    <select id="selectMyPostsPaged"
            parameterType="map"
            resultMap="PostResultMap">
        SELECT
        id,
        user_id       AS userId,
        type,
        title,
        content,
        createdat     AS createdAt,
        isdeleted     AS isDeleted,
        deletedat     AS deletedAt
        FROM post
        WHERE user_id = #{userId}
        <if test="selectedType != null and selectedType != ''">
            AND type = #{selectedType}
        </if>
        ORDER BY createdat DESC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 2-3) 내가 쓴 게시글 총건수 조회 -->
    <select id="countMyPosts"
            parameterType="long"
            resultType="int">
        SELECT COUNT(*)
        FROM post
        WHERE user_id = #{userId}
        AND isdeleted = FALSE
        <if test="selectedType != null and selectedType != ''">
            AND type = #{selectedType}
        </if>
    </select>

    <!-- 3) 내가 쓴 댓글 목록 -->
    <select id="selectMyCommentsPaged"
            parameterType="map"
            resultType="com.lec.spring.domain.Comment">
        SELECT
            id,
            user_id      AS userId,
            post_id      AS postId,
            parent_id    AS parentId,
            content,
            createdat    AS createdAt,
            ispicked     AS isPicked
        FROM comment
        WHERE user_id = #{userId}
        ORDER BY createdat DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 3-1) 내가 쓴 댓글 총건수 -->
    <select id="countMyComments"
            parameterType="map"
            resultType="long">
        SELECT COUNT(*)
        FROM comment
        WHERE user_id = #{userId}
    </select>

    <!-- 4) 내가 팔로잉한 사용자 목록 -->
    <select id="selectMyFollowing"
            parameterType="long"
            resultType="com.lec.spring.domain.User">
        SELECT u.id,
               u.username,
               u.name,
               (SELECT COUNT(*) FROM user_follow uf WHERE uf.following_userid = u.id) AS followersCount
        FROM user_follow f
                 JOIN user u ON f.followed_userid = u.id
        WHERE f.following_userid = #{userId}
        ORDER BY u.name ASC
    </select>

    <!-- 5) 프로필 양식(form) 조회 -->
    <select id="selectProfileUpdateForm"
            parameterType="long"
            resultType="com.lec.spring.domain.ProfileUpdateForm">
        SELECT id          AS userId,
               name        AS name
        FROM user
        WHERE id = #{userId}
    </select>

    <!-- 6) 프로필 일부(name, password) 업데이트 -->
    <update id="updateProfile"
            parameterType="com.lec.spring.domain.User">
        UPDATE user
        SET
            name     = #{name},
            password = #{password}
        WHERE id = #{id}
    </update>

</mapper>
